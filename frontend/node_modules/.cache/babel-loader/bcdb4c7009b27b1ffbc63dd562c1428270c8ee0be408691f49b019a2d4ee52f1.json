{"ast":null,"code":"const API_BASE = '/api';\nexport const api = {\n  async get(endpoint) {\n    const response = await fetch(`${API_BASE}${endpoint}`);\n    if (!response.ok) throw new Error(`API error: ${response.status}`);\n    return response.json();\n  },\n  async post(endpoint, data = {}) {\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) throw new Error(`API error: ${response.status}`);\n    return response.json();\n  },\n  async submitForm(endpoint, data) {\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams(data)\n    });\n    return response;\n  },\n  async deleteAccount(accountId) {\n    const response = await fetch(`/accounts/${accountId}/remove`, {\n      method: 'POST'\n    });\n    return response.ok;\n  }\n};","map":{"version":3,"names":["API_BASE","api","get","endpoint","response","fetch","ok","Error","status","json","post","data","method","headers","body","JSON","stringify","submitForm","URLSearchParams","deleteAccount","accountId"],"sources":["/Users/adamfurrer/Documents/projects/Python/digital_calendar/frontend/src/utils/api.ts"],"sourcesContent":["const API_BASE = '/api';\n\nexport const api = {\n  async get<T>(endpoint: string): Promise<T> {\n    const response = await fetch(`${API_BASE}${endpoint}`);\n    if (!response.ok) throw new Error(`API error: ${response.status}`);\n    return response.json();\n  },\n\n  async post<T>(endpoint: string, data: any = {}): Promise<T> {\n    const response = await fetch(`${API_BASE}${endpoint}`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(data)\n    });\n    if (!response.ok) throw new Error(`API error: ${response.status}`);\n    return response.json();\n  },\n\n  async submitForm(endpoint: string, data: Record<string, string>): Promise<Response> {\n    const response = await fetch(endpoint, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: new URLSearchParams(data)\n    });\n    return response;\n  },\n\n  async deleteAccount(accountId: string): Promise<boolean> {\n    const response = await fetch(`/accounts/${accountId}/remove`, {\n      method: 'POST'\n    });\n    return response.ok;\n  }\n};"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,MAAM;AAEvB,OAAO,MAAMC,GAAG,GAAG;EACjB,MAAMC,GAAGA,CAAIC,QAAgB,EAAc;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,GAAGG,QAAQ,EAAE,CAAC;IACtD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAClE,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMC,IAAIA,CAAIP,QAAgB,EAAEQ,IAAS,GAAG,CAAC,CAAC,EAAc;IAC1D,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGL,QAAQ,GAAGG,QAAQ,EAAE,EAAE;MACrDS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,IAAI;IAC3B,CAAC,CAAC;IACF,IAAI,CAACP,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,cAAcH,QAAQ,CAACI,MAAM,EAAE,CAAC;IAClE,OAAOJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACxB,CAAC;EAED,MAAMQ,UAAUA,CAACd,QAAgB,EAAEQ,IAA4B,EAAqB;IAClF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAACF,QAAQ,EAAE;MACrCS,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAoC,CAAC;MAChEC,IAAI,EAAE,IAAII,eAAe,CAACP,IAAI;IAChC,CAAC,CAAC;IACF,OAAOP,QAAQ;EACjB,CAAC;EAED,MAAMe,aAAaA,CAACC,SAAiB,EAAoB;IACvD,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAae,SAAS,SAAS,EAAE;MAC5DR,MAAM,EAAE;IACV,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,EAAE;EACpB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}