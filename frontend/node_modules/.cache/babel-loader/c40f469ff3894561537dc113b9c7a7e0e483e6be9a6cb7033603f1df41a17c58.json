{"ast":null,"code":"var _jsxFileName = \"/Users/adamfurrer/Documents/projects/Python/digital_calendar/frontend/src/pages/CalendarDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { api } from '../utils/api';\nimport { EventCard } from '../components/EventCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CalendarDisplay = () => {\n  _s();\n  const [currentView, setCurrentView] = useState('month');\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    loadEvents();\n    const interval = setInterval(loadEvents, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n  const loadEvents = async () => {\n    try {\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 60);\n      const endDate = new Date();\n      endDate.setDate(endDate.getDate() + 120);\n      const params = new URLSearchParams({\n        start_date: startDate.toISOString(),\n        end_date: endDate.toISOString()\n      });\n      const response = await api.get(`/events?${params}`);\n      setEvents(response.events || []);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading events:', error);\n      setLoading(false);\n    }\n  };\n  const navigateDate = direction => {\n    const newDate = new Date(currentDate);\n    if (currentView === 'day') {\n      newDate.setDate(newDate.getDate() + direction);\n    } else if (currentView === 'week') {\n      newDate.setDate(newDate.getDate() + direction * 7);\n    } else if (currentView === 'month') {\n      newDate.setMonth(newDate.getMonth() + direction);\n    }\n    setCurrentDate(newDate);\n  };\n  const goToToday = () => setCurrentDate(new Date());\n  const goToDate = (year, month, day) => {\n    setCurrentDate(new Date(year, month, day));\n    setCurrentView('day');\n  };\n  const formatTime = dateStr => {\n    return new Date(dateStr).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n  const isSameDay = (date1, date2) => {\n    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n  };\n  const getEventsForDate = date => {\n    return events.filter(e => isSameDay(new Date(e.start_time), date));\n  };\n  const getPeriodText = () => {\n    if (currentView === 'day') {\n      return currentDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    } else if (currentView === 'week') {\n      const monday = new Date(currentDate);\n      const day = monday.getDay();\n      const diff = monday.getDate() - day + (day === 0 ? -6 : 1);\n      monday.setDate(diff);\n      const sunday = new Date(monday);\n      sunday.setDate(sunday.getDate() + 6);\n      const startMonth = monday.toLocaleDateString('en-US', {\n        month: 'long'\n      });\n      const endMonth = sunday.toLocaleDateString('en-US', {\n        month: 'long'\n      });\n      const year = sunday.getFullYear();\n      if (startMonth === endMonth) {\n        return `${startMonth} ${monday.getDate()}-${sunday.getDate()}, ${year}`;\n      }\n      return `${startMonth} ${monday.getDate()} - ${endMonth} ${sunday.getDate()}, ${year}`;\n    } else {\n      return currentDate.toLocaleDateString('en-US', {\n        month: 'long',\n        year: 'numeric'\n      });\n    }\n  };\n  const renderDayView = () => {\n    const dayEvents = getEventsForDate(currentDate);\n    const dayName = currentDate.toLocaleDateString('en-US', {\n      weekday: 'long'\n    });\n    const dayNum = currentDate.getDate();\n    const monthYear = currentDate.toLocaleDateString('en-US', {\n      month: 'long',\n      year: 'numeric'\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"day-view\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"day-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-circle\",\n          children: dayNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: dayName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: monthYear\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), dayEvents.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no-events\",\n        children: \"No events on this day\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this) : dayEvents.map(event => /*#__PURE__*/_jsxDEV(EventCard, {\n        event: event\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 34\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  };\n  const renderWeekView = () => {\n    const monday = new Date(currentDate);\n    const day = monday.getDay();\n    const diff = monday.getDate() - day + (day === 0 ? -6 : 1);\n    monday.setDate(diff);\n    const today = new Date();\n    const dayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const days = [];\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(monday);\n      date.setDate(date.getDate() + i);\n      const isToday = isSameDay(date, today);\n      const dayEvents = getEventsForDate(date);\n      days.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `day-column ${isToday ? 'today' : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"day-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-name\",\n            children: dayNames[i]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `day-number ${isToday ? 'today' : ''}`,\n            children: date.getDate()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), dayEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"compact-event\",\n          style: {\n            background: `linear-gradient(135deg, ${event.color} 0%, ${event.color}dd 100%)`\n          },\n          onClick: () => goToDate(date.getFullYear(), date.getMonth(), date.getDate()),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: [event.title.substring(0, 20), event.title.length > 20 ? '...' : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), !event.all_day && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: formatTime(event.start_time)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 34\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this))]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"week-view\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"week-grid\",\n        children: days\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this);\n  };\n  const renderMonthView = () => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const startingDayOfWeek = firstDay.getDay() === 0 ? 6 : firstDay.getDay() - 1;\n    const today = new Date();\n    const cells = [];\n    const dayHeaders = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    dayHeaders.forEach(day => {\n      cells.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weekday-header\",\n        children: day\n      }, `header-${day}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 18\n      }, this));\n    });\n    for (let i = 0; i < startingDayOfWeek; i++) {\n      cells.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-cell\"\n      }, `empty-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 18\n      }, this));\n    }\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      const cellDate = new Date(year, month, day);\n      const isToday = isSameDay(cellDate, today);\n      const dayEvents = getEventsForDate(cellDate);\n      cells.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `month-cell ${isToday ? 'today' : ''}`,\n        onClick: () => goToDate(year, month, day),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-date\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `date-number ${isToday ? 'today' : ''}`,\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), dayEvents.slice(0, 3).map((event, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `month-event ${event.all_day ? 'all-day' : ''}`,\n          style: {\n            background: `linear-gradient(135deg, ${event.color} 0%, ${event.color}dd 100%)`\n          },\n          children: event.title.length > 25 ? event.title.substring(0, 25) + '...' : event.title\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)), dayEvents.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"more-events\",\n          children: [\"+\", dayEvents.length - 3, \" more\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, day, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"month-view\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-grid\",\n        children: cells\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: \"Loading events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Calendar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"view-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-btn ${currentView === 'day' ? 'active' : ''}`,\n          onClick: () => setCurrentView('day'),\n          children: \"Day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-btn ${currentView === 'week' ? 'active' : ''}`,\n          onClick: () => setCurrentView('week'),\n          children: \"Week\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `view-btn ${currentView === 'month' ? 'active' : ''}`,\n          onClick: () => setCurrentView('month'),\n          children: \"Month\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: () => navigateDate(-1),\n        children: \"\\u2190 Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"current-period\",\n        children: getPeriodText()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: () => navigateDate(1),\n        children: \"Next \\u2192\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-btn\",\n        onClick: goToToday,\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"calendarContent\",\n      children: [currentView === 'day' && renderDayView(), currentView === 'week' && renderWeekView(), currentView === 'month' && renderMonthView()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarDisplay, \"ThufqC6xqvb9OFNDLo5qoV4MLgY=\");\n_c = CalendarDisplay;\nvar _c;\n$RefreshReg$(_c, \"CalendarDisplay\");","map":{"version":3,"names":["React","useState","useEffect","api","EventCard","jsxDEV","_jsxDEV","CalendarDisplay","_s","currentView","setCurrentView","currentDate","setCurrentDate","Date","events","setEvents","loading","setLoading","loadEvents","interval","setInterval","clearInterval","startDate","setDate","getDate","endDate","params","URLSearchParams","start_date","toISOString","end_date","response","get","error","console","navigateDate","direction","newDate","setMonth","getMonth","goToToday","goToDate","year","month","day","formatTime","dateStr","toLocaleTimeString","hour","minute","hour12","isSameDay","date1","date2","getFullYear","getEventsForDate","date","filter","e","start_time","getPeriodText","toLocaleDateString","weekday","monday","getDay","diff","sunday","startMonth","endMonth","renderDayView","dayEvents","dayName","dayNum","monthYear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","event","id","renderWeekView","today","dayNames","days","i","isToday","push","style","background","color","onClick","title","substring","all_day","renderMonthView","firstDay","lastDay","startingDayOfWeek","cells","dayHeaders","forEach","cellDate","slice","idx","_c","$RefreshReg$"],"sources":["/Users/adamfurrer/Documents/projects/Python/digital_calendar/frontend/src/pages/CalendarDisplay.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { api } from '../utils/api';\nimport { EventCard } from '../components/EventCard';\nimport { CalendarEvent, ViewType } from '../types';\n\nexport const CalendarDisplay: React.FC = () => {\n  const [currentView, setCurrentView] = useState<ViewType>('month');\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [events, setEvents] = useState<CalendarEvent[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadEvents();\n    const interval = setInterval(loadEvents, 5 * 60 * 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadEvents = async () => {\n    try {\n      const startDate = new Date();\n      startDate.setDate(startDate.getDate() - 60);\n      const endDate = new Date();\n      endDate.setDate(endDate.getDate() + 120);\n\n      const params = new URLSearchParams({\n        start_date: startDate.toISOString(),\n        end_date: endDate.toISOString()\n      });\n\n      const response = await api.get<any>(`/events?${params}`);\n      setEvents(response.events || []);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading events:', error);\n      setLoading(false);\n    }\n  };\n\n  const navigateDate = (direction: number) => {\n    const newDate = new Date(currentDate);\n    if (currentView === 'day') {\n      newDate.setDate(newDate.getDate() + direction);\n    } else if (currentView === 'week') {\n      newDate.setDate(newDate.getDate() + (direction * 7));\n    } else if (currentView === 'month') {\n      newDate.setMonth(newDate.getMonth() + direction);\n    }\n    setCurrentDate(newDate);\n  };\n\n  const goToToday = () => setCurrentDate(new Date());\n\n  const goToDate = (year: number, month: number, day: number) => {\n    setCurrentDate(new Date(year, month, day));\n    setCurrentView('day');\n  };\n\n  const formatTime = (dateStr: string): string => {\n    return new Date(dateStr).toLocaleTimeString('en-US', {\n      hour: 'numeric',\n      minute: '2-digit',\n      hour12: true\n    });\n  };\n\n  const isSameDay = (date1: Date, date2: Date): boolean => {\n    return date1.getFullYear() === date2.getFullYear() &&\n           date1.getMonth() === date2.getMonth() &&\n           date1.getDate() === date2.getDate();\n  };\n\n  const getEventsForDate = (date: Date): CalendarEvent[] => {\n    return events.filter(e => isSameDay(new Date(e.start_time), date));\n  };\n\n  const getPeriodText = (): string => {\n    if (currentView === 'day') {\n      return currentDate.toLocaleDateString('en-US', {\n        weekday: 'long',\n        month: 'long',\n        day: 'numeric',\n        year: 'numeric'\n      });\n    } else if (currentView === 'week') {\n      const monday = new Date(currentDate);\n      const day = monday.getDay();\n      const diff = monday.getDate() - day + (day === 0 ? -6 : 1);\n      monday.setDate(diff);\n      const sunday = new Date(monday);\n      sunday.setDate(sunday.getDate() + 6);\n\n      const startMonth = monday.toLocaleDateString('en-US', { month: 'long' });\n      const endMonth = sunday.toLocaleDateString('en-US', { month: 'long' });\n      const year = sunday.getFullYear();\n\n      if (startMonth === endMonth) {\n        return `${startMonth} ${monday.getDate()}-${sunday.getDate()}, ${year}`;\n      }\n      return `${startMonth} ${monday.getDate()} - ${endMonth} ${sunday.getDate()}, ${year}`;\n    } else {\n      return currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n    }\n  };\n\n  const renderDayView = () => {\n    const dayEvents = getEventsForDate(currentDate);\n    const dayName = currentDate.toLocaleDateString('en-US', { weekday: 'long' });\n    const dayNum = currentDate.getDate();\n    const monthYear = currentDate.toLocaleDateString('en-US', { month: 'long', year: 'numeric' });\n\n    return (\n      <div className=\"day-view\">\n        <div className=\"day-header\">\n          <div className=\"day-circle\">{dayNum}</div>\n          <div className=\"day-info\">\n            <h2>{dayName}</h2>\n            <p>{monthYear}</p>\n          </div>\n        </div>\n        {dayEvents.length === 0 ? (\n          <div className=\"no-events\">No events on this day</div>\n        ) : (\n          dayEvents.map(event => <EventCard key={event.id} event={event} />)\n        )}\n      </div>\n    );\n  };\n\n  const renderWeekView = () => {\n    const monday = new Date(currentDate);\n    const day = monday.getDay();\n    const diff = monday.getDate() - day + (day === 0 ? -6 : 1);\n    monday.setDate(diff);\n\n    const today = new Date();\n    const dayNames = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n    const days = [];\n\n    for (let i = 0; i < 7; i++) {\n      const date = new Date(monday);\n      date.setDate(date.getDate() + i);\n      const isToday = isSameDay(date, today);\n      const dayEvents = getEventsForDate(date);\n\n      days.push(\n        <div key={i} className={`day-column ${isToday ? 'today' : ''}`}>\n          <div className=\"day-header\">\n            <div className=\"day-name\">{dayNames[i]}</div>\n            <div className={`day-number ${isToday ? 'today' : ''}`}>{date.getDate()}</div>\n          </div>\n          {dayEvents.map(event => (\n            <div\n              key={event.id}\n              className=\"compact-event\"\n              style={{ background: `linear-gradient(135deg, ${event.color} 0%, ${event.color}dd 100%)` }}\n              onClick={() => goToDate(date.getFullYear(), date.getMonth(), date.getDate())}\n            >\n              <div className=\"title\">\n                {event.title.substring(0, 20)}{event.title.length > 20 ? '...' : ''}\n              </div>\n              {!event.all_day && <div className=\"time\">{formatTime(event.start_time)}</div>}\n            </div>\n          ))}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"week-view\">\n        <div className=\"week-grid\">{days}</div>\n      </div>\n    );\n  };\n\n  const renderMonthView = () => {\n    const year = currentDate.getFullYear();\n    const month = currentDate.getMonth();\n    const firstDay = new Date(year, month, 1);\n    const lastDay = new Date(year, month + 1, 0);\n    const startingDayOfWeek = firstDay.getDay() === 0 ? 6 : firstDay.getDay() - 1;\n    const today = new Date();\n\n    const cells = [];\n    const dayHeaders = ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'];\n\n    dayHeaders.forEach(day => {\n      cells.push(<div key={`header-${day}`} className=\"weekday-header\">{day}</div>);\n    });\n\n    for (let i = 0; i < startingDayOfWeek; i++) {\n      cells.push(<div key={`empty-${i}`} className=\"month-cell\"></div>);\n    }\n\n    for (let day = 1; day <= lastDay.getDate(); day++) {\n      const cellDate = new Date(year, month, day);\n      const isToday = isSameDay(cellDate, today);\n      const dayEvents = getEventsForDate(cellDate);\n\n      cells.push(\n        <div\n          key={day}\n          className={`month-cell ${isToday ? 'today' : ''}`}\n          onClick={() => goToDate(year, month, day)}\n        >\n          <div className=\"month-date\">\n            <span className={`date-number ${isToday ? 'today' : ''}`}>{day}</span>\n          </div>\n          {dayEvents.slice(0, 3).map((event, idx) => (\n            <div\n              key={idx}\n              className={`month-event ${event.all_day ? 'all-day' : ''}`}\n              style={{ background: `linear-gradient(135deg, ${event.color} 0%, ${event.color}dd 100%)` }}\n            >\n              {event.title.length > 25 ? event.title.substring(0, 25) + '...' : event.title}\n            </div>\n          ))}\n          {dayEvents.length > 3 && (\n            <div className=\"more-events\">+{dayEvents.length - 3} more</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"month-view\">\n        <div className=\"month-grid\">{cells}</div>\n      </div>\n    );\n  };\n\n  if (loading) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"loading\">Loading events</div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <h1>Calendar</h1>\n        <div className=\"view-controls\">\n          <button\n            className={`view-btn ${currentView === 'day' ? 'active' : ''}`}\n            onClick={() => setCurrentView('day')}\n          >\n            Day\n          </button>\n          <button\n            className={`view-btn ${currentView === 'week' ? 'active' : ''}`}\n            onClick={() => setCurrentView('week')}\n          >\n            Week\n          </button>\n          <button\n            className={`view-btn ${currentView === 'month' ? 'active' : ''}`}\n            onClick={() => setCurrentView('month')}\n          >\n            Month\n          </button>\n        </div>\n      </div>\n\n      <div className=\"nav-controls\">\n        <button className=\"nav-btn\" onClick={() => navigateDate(-1)}>← Prev</button>\n        <span className=\"current-period\">{getPeriodText()}</span>\n        <button className=\"nav-btn\" onClick={() => navigateDate(1)}>Next →</button>\n        <button className=\"nav-btn\" onClick={goToToday}>Today</button>\n      </div>\n\n      <div id=\"calendarContent\">\n        {currentView === 'day' && renderDayView()}\n        {currentView === 'week' && renderWeekView()}\n        {currentView === 'month' && renderMonthView()}\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}